openapi: 3.0.0
info:
  title: Sample API
  version: 1.0.0
  description: A sample API with OpenAPI specification
paths:
  /api/user:
    get:
      summary: Récupérer tous les utilisateurs
      responses:
        '200':
          description: Liste des utilisateurs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Créer un nouvel utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Utilisateur créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/user/{id}:
    get:
      summary: Récupérer un utilisateur par ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Détails de l'utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Utilisateur non trouvé
    put:
      summary: Mettre à jour un utilisateur par ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Utilisateur mis à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Utilisateur non trouvé
    delete:
      summary: Supprimer un utilisateur par ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Utilisateur supprimé avec succès
        '404':
          description: Utilisateur non trouvé
  /api/user/search:
    get:
      summary: Rechercher des utilisateurs
      parameters:
        - name: q
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Résultats de la recherche
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/user/paginate:
    get:
      summary: Paginer les utilisateurs
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Liste paginée des utilisateurs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/user/test/{id}:
    post:
      summary: Changer le mot de passe d'un utilisateur
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Mot de passe changé avec succès
        '404':
          description: Utilisateur non trouvé
  /api/auth/login:
    post:
      summary: Authentification utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Authentification réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Identifiants invalides
components:
  schemas:
    User:
      type: object
      properties:
        id_user:
          type: integer
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
          nullable: true
        roleId:
          type: integer
        agency_id:
          type: integer
          nullable: true
        license_number:
          type: string
          nullable: true
        failed_attempts:
          type: integer
          nullable: true
        account_locked:
          type: boolean
          nullable: true
        active:
          type: boolean
          nullable: true
        deactivation_date:
          type: string
          format: date-time
          nullable: true
      required:
        - id_user
        - email
        - first_name
        - roleId
    UserInput:
      type: object
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
          nullable: true
        password:
          type: string
      required:
        - email
        - first_name
        - password
    LoginInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password