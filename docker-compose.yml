version: "3.8"

networks:
  sparknet:
    external: true

services:
  db:
    image: postgres:15
    container_name: sparkotto-back-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sparkotto
    # En local seulement : expose si tu veux te connecter depuis l'h√¥te
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: sparkotto-back-backend
    build:
      context: .
      # Assure-toi que le nom correspond exactement √† ton fichier (Dockerfile vs dockerfile)
      dockerfile: ./dockerfile
      # ‚ùå Pas d'ARGs pour DATABASE_URL ici
      args:
        - NODE_ENV=production
    image: sparkotto-back-backend:latest
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      # üëâ Prisma : utilise l‚Äôh√¥te docker "db" + ajoute le schema
      DATABASE_URL: postgresql://postgres:postgres@db:5432/sparkotto?schema=public
      # Pour wait-for-db.sh
      DB_HOST: db
      DB_USER: postgres
      DB_PORT: "5432"
      # Active le seed seulement au premier run (mets "false" ensuite)
      #SEED_ON_START: "true"
      # Si ton app en a besoin :
      TOKEN_GIT: ${TOKEN_GIT}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    pull_policy: build  # OK avec Docker Compose moderne / Portainer

volumes:
  pg_data:
