name: CI Pipeline with Jest, SonarCloud & Trivy

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  test:
    name: Run Jest Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests with Jest
        run: npm test -- --ci --coverage

  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test  # ðŸš€ ExÃ©cuter Sonar seulement si les tests rÃ©ussissent
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run SonarCloud scan
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.organization=SparkOtto \
            -Dsonar.projectKey=sparkotto-back \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

  security:
    name: Run Trivy Security Scan
    runs-on: ubuntu-latest
    needs: test  # ðŸš€ ExÃ©cuter Trivy seulement si les tests rÃ©ussissent
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          exit-code: "0"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"

      - name: Scan Docker image for vulnerabilities (si Docker est utilisÃ©)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "ghcr.io/SparkOtto/sha256:d00da4a39d953f046225e7c20f9f53cb95fc8ffc881db627236480c03604b4b7"
          exit-code: "0"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"